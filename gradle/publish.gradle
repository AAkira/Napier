import dependencies.Versions

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = BINTRAY_PACKAGE
version = Versions.versionName

publishing.publications.all {
    pom {
        description = POM_DESCRIPTION
        url = SITE_URL
        licenses {
            license {
                name = POM_LICENSE_NAME
                url = POM_LICENSE_URL
                distribution = POM_LICENSE_DIST
            }
        }
        developers {
            developer {
                id = POM_DEVELOPER_ID
                name = POM_DEVELOPER_NAME
                organization = POM_ORGANIZATION_NAME
                organizationUrl = POM_ORGANIZATION_URL
            }
        }
        scm {
            url = SITE_URL
        }
    }
}

def getBintrayUserProperty() {
    return hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
}

def getBintrayApiKeyProperty() {
    return hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
}

bintray {
    user = getBintrayUserProperty()
    key = getBintrayApiKeyProperty()
    publish = false
    override = true // for multi-platform Kotlin/Native publishing

    pkg {
        repo = BINTRAY_REPOSITORY
        name = BINTRAY_NAME
        userOrg = GROUP
        licenses = ['Apache-2.0']
        vcsUrl = VCS_URL
        websiteUrl = SITE_URL
        issueTrackerUrl = ISSUE_URL

        version {
            name = Versions.versionName
            vcsTag = Versions.versionName
            released = new Date()
        }
    }
}

def isMultiplatform = project.name == "napier"

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
}

bintrayUpload.doFirst {
    publications = project.publishing.publications.findAll { !it.name.contains('-test') }.collect {
        it.name
    }
}

bintrayUpload.dependsOn publishToMavenLocal
